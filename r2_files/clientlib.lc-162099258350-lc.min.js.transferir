const mmDDyyyyPattern =
  "((0[13578]|1[02])[/.]31[/.](18|19|20)[0-9]{2})|((01|0[3-9]|1[1-2])[/.](29|30)[/.](18|19|20)[0-9]{2})|((0[1-9]|1[0-2])[/.](0[1-9]|1[0-9]|2[0-8])[/.](18|19|20)[0-9]{2})|((02)[/.]29[/.](((18|19|20)(04|08|[2468][048]|[13579][26]))|2000))";

const ddMMyyyyPattern =
  "^(((0[1-9]|[12][0-9]|30)[-/]?(0[13-9]|1[012])|31[-/]?(0[13578]|1[02])|(0[1-9]|1[0-9]|2[0-8])[-/]?02)[-/]?[0-9]{4}|29[-/]?02[-/]?([0-9]{2}(([2468][048]|[02468][48])|[13579][26])|([13579][26]|[02468][048]|0[0-9]|1[0-6])00))$";

let lifetime;

function getCookie(cname) {
  var name = cname + "=";
  var ca = document.cookie.split(";");
  for (var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == " ") {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}

async function handleCookies(cookie_life, qrSource, cookie_delay) {
  lifetime = cookie_life;

  setTimeout(
    () => checkCookie(cookie_life, qrSource),
    cookie_delay ? cookie_delay * 1000 : 0
  );

  function getQRParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
      results = regex.exec(url);
    if (!results) return "";
    if (!results[2]) return "";
    return decodeURIComponent(results[2].replace(/\+/g, " "));
  }

  function show(cookie_life, startup_cookie, lifetime) {
    if (cookie_life == "Always") {
      $("body").addClass("overflow-hidden");
      $("#fade").show();
    }
    if (startup_cookie == "" && cookie_life != "Always") {
      lifetime = "Session";
      switch (cookie_life) {
        case "Session":
          lifetime = "Session";
          break;
        case "Day":
          lifetime = "1";
          break;
        default:
          lifetime = "Session";
      }
      startup_cookie = "showed";
      $("body").addClass("overflow-hidden");
      $("#fade").show();
    }
  }

  function checkCookie(cookie_life, qrSource) {
    if (cookie_life === "OnClick") {
      return;
    }
    if (!qrSource) qrSource = false;
    var startup_cookie = getCookie("stratup_popup");
    var lifetime = "";
    var qr = getQRParameterByName("utm_medium").toLowerCase();

    if (qrSource && qr != "qr") {
      return;
    }

    if (qrSource && qr === "qr") {
      show(cookie_life, startup_cookie, lifetime);
    }

    if (!qrSource) {
      show(cookie_life, startup_cookie, lifetime);
    }
  }
}

function setCookie(cname, cvalue, exdays) {
  var d = new Date();
  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
  var expires = "expires=" + d.toUTCString();
  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}

(function (document, $) {
  "use strict";

  $(document).ready(function () {
    let requiredInputs = [
      ...document.querySelectorAll("#fade input[required]"),
    ];
    const custom_textDateInput = document.querySelector(
      "#sbp-popup input[name='custom_textDateInput']"
    );
    const dateInput = document.querySelector(
      "#sbp-popup input[name='dateOfBirth']"
    );

    const vejoForm = document.querySelector("#vejoSignupForm");
    const isDDmmYYYYpattern = vejoForm ? true : false;

    if (dateInput) {
      dateInput.setAttribute("max", "2021-01-01");
      dateInput.setAttribute("min", "1900-01-01");
      dateInput.addEventListener("blur", function () {
        if (dateInput.value !== "") {
          dateInput.setAttribute("required", "");
        } else {
          dateInput.removeAttribute("required");
        }

        requiredInputs = [
          ...document.querySelectorAll("#fade input[required]"),
        ];
      });
    }

    if (custom_textDateInput) {
      custom_textDateInput.setAttribute("maxlength", "10");
      custom_textDateInput.setAttribute(
        "placeholder",
        isDDmmYYYYpattern ? "dd/mm/yyyy" : "mm/dd/yyyy"
      );

      custom_textDateInput.addEventListener("keyup", function (e) {
        if (custom_textDateInput.value === "") {
          custom_textDateInput.removeAttribute("required");
          custom_textDateInput.removeAttribute("pattern");
          requiredInputs = [
            ...document.querySelectorAll("#fade input[required]"),
          ];
        } else {
          custom_textDateInput.setAttribute("required", "");
          custom_textDateInput.setAttribute(
            "pattern",
            isDDmmYYYYpattern ? ddMMyyyyPattern : mmDDyyyyPattern
          );
          requiredInputs = [
            ...document.querySelectorAll("#fade input[required]"),
          ];
        }

        const value = e.target.value;
        custom_textDateInput.value = value
          .replace(/^(\d\d)(\d)$/g, "$1/$2")
          .replace(/^(\d\d\/\d\d)(\d+)$/g, "$1/$2")
          .replace(/[^\d\/]/g, "");

        const day = value.split("/")[isDDmmYYYYpattern ? 0 : 1];
        const month = value.split("/")[isDDmmYYYYpattern ? 1 : 0];
        const year = value.split("/")[2];

        const handleMonth = (month) =>
          month <= 10 ? `0${Number(month) - 1}` : Number(month) - 1;

        const handleDay = (day) => Number(day) + 1;

        dateInput.valueAsDate = new Date(
          year,
          handleMonth(month),
          handleDay(day)
        );
      });
    }

    $(".close_startup_popup, .inside_back, #close-popup-button a").on(
      "click",
      function () {
        setCookie("stratup_popup", "viewed", lifetime);
        $("#fade").hide();
        $("body").removeClass("overflow-hidden");
      }
    );

    $("#fade button[type='SUBMIT']").on("click", function () {
      custom_textDateInput && custom_textDateInput.removeAttribute("name");
      //remove custom attribute from form to avoid it being submitted.

      const validated = requiredInputs.every((input) => input.checkValidity());

      if (validated) {
        setCookie("stratup_popup", "viewed", lifetime);
        $("#fade").hide();
        $("body").removeClass("overflow-hidden");
      }
    });

    $(document).keydown(function (e) {
      var code = e.keyCode || e.which;
      if (code == 27) {
        setCookie("stratup_popup", "viewed", lifetime);
        $("#fade").hide();
        $("body").removeClass("overflow-hidden");
      }
    });
  });
})(document, Granite.$);
